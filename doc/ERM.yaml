openapi: 3.0.3
info:
  title: ERM
  description: Actividad de Aprendizaje de Acceso a Datos
  version: 1.0.0
servers:
  - url: "http://localhost:8080"
tags:
  - name: Emergency personal
    description: Operaciones con el personal de emergencia
  - name: Emergency Service
    description: Operaciones con los servicios de emergencia
  - name: Emergency Vehicle
    description: Operaciones con los vehiculos de emergencia
  - name: Incident
    description: Operaciones con los incidentes
  - name: Intervention
    description: Operaciones con las intervenciones
  - name: Report
    description: Operaciones con los informes

paths:
  /EmergencyPersonal:
    get:
      tags:
        - Emergency personal
      summary: Lista de todos el personal de la aplicacion
      operationId: Emergency Personal
      description: Obtiene una lista con todos el personal de la aplicacion. No es obligatorio introducir ningun parametro adicional. Solo se puede introducir un parametro a la vez.
      parameters:
        - name: id
          in: path
          description: Obtiene el personal que tenga el id pasado por parametro
          required: false
          schema:
            type: integer
          examples:
            Ejemplo_1:
              value: 1
            Ejemplo_2:
              value: 2
        - name: fullName
          in: query
          description: Obtiene una lista con todos el personal que contengan el nombre pasado por parametro
          required: false
          schema:
            type: string
          examples:
            Ejemplo_1:
              value: Pepe
            Ejemplo_2:
              value: P
        - name: type
          in: query
          description: Obtiene una lista con todos el personal de la categoria pasada por parametro
          required: false
          schema:
            type: string
          examples:
            Ejemplo_1:
              value: Fire
            Ejemplo_2:
              value: Police
      responses:
        "200":
          description: Operacion correcta
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmgPersonal"
        "400":
          description: Bad Request - URL o parametros mal introducidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ErrorCode400"
        "404":
          description: Personal no encontrado
        "500":
          description: Error Interno

    post:
      tags:
        - Emergency personal
      summary: Crea un registro
      operationId: Emergency Personal
      description: Crea un registro de un personal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmgPersonalDTO"
      responses:
        "200":
          description: Operacion correcta
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmgPersonal"
        "400":
          description: Bad Request - URL o parametros mal introducidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ErrorCode400"
        "404":
          description: Personal no encontrado
        "500":
          description: Error Interno
    put:
      tags:
        - Emergency personal
      summary: edita un registro
      operationId: Emergency Personal
      description: Edita un registro de un personal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmgPersonalDTO"
      responses:
        "200":
          description: Operacion correcta
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmgPersonal"
        "400":
          description: Bad Request - URL o parametros mal introducidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ErrorCode400"
        "404":
          description: Personal no encontrado
        "500":
          description: Error Interno
    delete:
      tags:
        - Emergency personal
      summary: Borra un registro
      operationId: Emergency Personal
      description: Borra un registro de un personal
      parameters:
        - name: Id
          in: path
          description: Id del personal que se quiere borrar
          required: true
          schema:
            type: integer

      responses:
        "200":
          description: Operacion correcta
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmgPersonal"
        "400":
          description: Bad Request - URL o parametros mal introducidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ErrorCode400"
        "404":
          description: Personal no encontrado
        "500":
          description: Error Interno

      
components:
  schemas:
    EmgPersonal:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        EmgService:
          $ref: "#/components/schemas/EmgService"
        fullName:
          type: string
          description: Nombre del personal en la aplicacion
          example: Daniel Gonzalez
        idNumber:
          type: string
          description: Numero de identificacion de la persona
          example: 123456789f
        type:
          type: string
          description: Sector del Personal
          example: Fire
        title:
          type: string
          description: Titulo
          example: Dr.
    EmgPersonalDTO:
      type: object
      properties:
        emgServiceId:
          type: integer
          description: Id del servicio de emergencia
          example: 1
        fullName:
          type: string
          description: Nombre del personal en la aplicacion
          example: Daniel Gonzalez
        idNumber:
          type: string
          description: Numero de identificacion de la persona
          example: 123456789f
        type:
          type: string
          description: Sector del Personal
          example: Fire
        title:
          type: string
          description: Titulo
          example: Dr.
    EmgService:
      type: object
      properties:
        id:
          type: integer
          description: Identificador unico del servicio
          example: 1
        location:
          type: string
          description: Localidad del servicio
          example: Zaragoza
        type:
          type: string
          description: Tipo del servicio
          example: Fire
    EmgServiceDTO:
      type: object
      properties:
        location:
          type: string
          description: Localidad del servicio
          example: Zaragoza
        type:
          type: string
          description: Tipo del servicio
          example: Fire
    EmgVehicle:
      type: object
      properties:
        id:
          type: integer
          description: Identificador unico de vehiculo
          example: 1
        EmgService:
          $ref: "#/components/schemas/EmgService"
        model:
          type: string
          description: Modelo del vehiculos
          example: Seat panda
        vin:
          type: string
          description: Numero de identificacion de vehiculo
          example: 216546354fad534
        type:
          type: string
          description: Tipo de vehiculo
          example: Fire
        operStatus:
          type: integer
          description: porcentaje de operatividad
          example: 100
        onRoute:
          type: boolean
          description: si el vehiculo esta en ruta
          example: false
        avaliable:
          type: boolean
          description: Si el vehiculo esta disponible
          example: true
        location:
          type: string
          description: Localidad de origen del vehiculo
          example: Zaragoza
        lat:
          type: number
          format: float
          description: Latitud
          example: 10.00023
        lon:
          type: number
          format: float
          description: Longitud
          example: 10.00036
        lastMaintenance:
          type: string
          format: date
          description: fecha de ultimo mantenimiento
          example: 2003-12-06

    ErrorCode400:
      type: object
      properties:
        code:
          type: integer
          description: Numero del error
          example: 400
        message:
          type: string
          description: Mensaje de error
          example: Bad Request
        errors:
          type: array
          description: Descripcion de los errores.
          example: El nombre no puede estar vacio
      xml:
        name: ErrorCode400
    ErrorCode500:
      type: object
      properties:
        code:
          type: integer
          description: Numero del error
          example: 500
        message:
          type: string
          description: Mensaje de error
          example: Error Interno
        errors:
          type: array
          example: ""
      xml:
        name: ErrorCode500
